#!/bin/bash

## This script is meant to deploy the ACM Website to Website-Deploy.

DEFAULT_DEPLOY_PATH=$(dirname "$(pwd)")/Website-Deployment

if [ "$1" != "" ]; then
	DEPLOY_PATH=$1
else
	DEPLOY_PATH=$DEFAULT_DEPLOY_PATH
fi

#Make sure we're actually in a git directory
if [ ! -d .git ]; then
	printf "\nThe current directory is not a git repo!\n"
	printf "You probably moved this script out of its intended location\n"
	printf "Please move it to the root directory of the website and run it again.\n"
	exit 3
fi

if [ ! -d dist ]; then
	printf "The dist/ directory appears to be missing.\n"
	printf "This directory is usually generated by gulp and contains\n"
	printf "the materials necessary for the website. Please run gulp to\n"
	printf "generate this directory and then run this script again.\n"
	exit 4
fi

printf "This script is meant to deploy the UCMACM Webpage.\n"
printf "The current path to the Deployment folder is:\n\n\t %s\n\n" $DEPLOY_PATH
printf "To change it, rerun this script with the path as the first argument.\n"
printf "Continue? [Y/n] "

#Shitty shit user input handling :(

read USR_INPT_1

CONTINUE="FALSE"

case $USR_INPT_1 in
	"Yes")
		CONTINUE="TRUE"
		;;
	"Y")
		CONTINUE="TRUE"
		;;
	"y")
		CONTINUE="TRUE"
		;;
	"yes")
		CONTINUE="TRUE"
		;;
	*)
		CONTINUE="FALSE"
		;;
esac

if [ $CONTINUE = "FALSE" ]; then
	printf "\nAborting...\n"
	exit 1
fi

#End input handling

#Make sure the target directory is actually a git repo
if [ ! -d $DEPLOY_PATH/.git ]; then
	printf "\nError! Target directory is not a Git repo!\n"
	printf "Fatal error, aborting...\n"
	exit 2;
fi

cp -R ./dist/* $DEPLOY_PATH/

if [ $? = 0 ]; then
	printf "\n\nCongrats! The correct files should now be in the deploy\n"
	printf "directory. Simply cd there and run \"git push\" to deploy\n"
	printf "the website.\n"
	exit 0;
else
	printf "Something went wrong. Guess you're fucked \_o_O_/\n"
	exit 666
fi

